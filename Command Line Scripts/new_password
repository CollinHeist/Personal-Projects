#!/usr/bin/env python3

import argparse
import secrets
import string

def generate_argument_parser():
	ap = argparse.ArgumentParser()
	ap.add_argument('-l', '--length', required=True, help='Password Length')
	ap.add_argument('-e', '--exclude', required=False, help='Excluded Characters')
	args = vars(ap.parse_args())

	return args

def generate_password(length, exclude):
	# Get valid length
	if not length.isdigit():
		raise ValueError("Enter a numeric length")

	length = int(length)
	if length <= 0:
		raise ValueError("Enter a positive length")

	# Get string of acceptable characters
	exclude = '' if exclude == None else exclude # If not specified, ensure None isn't passed to .replace()
	valid_chars = string.ascii_letters + string.digits + string.punctuation
	for invalid_char in exclude:
		valid_chars = valid_chars.replace(invalid_char, '')

	return ''.join(secrets.choice(valid_chars) for _ in range(length))

args = generate_argument_parser()
password = generate_password(args['length'], args['exclude'])
print (password)